// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.11.4
// source: response_account_rms_info.proto

package rti

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// below enum is just for reference only, not used in this message
type ResponseAccountRmsInfo_PresenceBits int32

const (
	ResponseAccountRmsInfo_BUY_LIMIT           ResponseAccountRmsInfo_PresenceBits = 1
	ResponseAccountRmsInfo_SELL_LIMIT          ResponseAccountRmsInfo_PresenceBits = 2
	ResponseAccountRmsInfo_LOSS_LIMIT          ResponseAccountRmsInfo_PresenceBits = 4
	ResponseAccountRmsInfo_MAX_ORDER_QUANTITY  ResponseAccountRmsInfo_PresenceBits = 8
	ResponseAccountRmsInfo_MIN_ACCOUNT_BALANCE ResponseAccountRmsInfo_PresenceBits = 16
	ResponseAccountRmsInfo_MIN_MARGIN_BALANCE  ResponseAccountRmsInfo_PresenceBits = 32
	ResponseAccountRmsInfo_ALGORITHM           ResponseAccountRmsInfo_PresenceBits = 64
	ResponseAccountRmsInfo_STATUS              ResponseAccountRmsInfo_PresenceBits = 128
	ResponseAccountRmsInfo_CURRENCY            ResponseAccountRmsInfo_PresenceBits = 256
	ResponseAccountRmsInfo_DEFAULT_COMMISSION  ResponseAccountRmsInfo_PresenceBits = 512
)

// Enum value maps for ResponseAccountRmsInfo_PresenceBits.
var (
	ResponseAccountRmsInfo_PresenceBits_name = map[int32]string{
		1:   "BUY_LIMIT",
		2:   "SELL_LIMIT",
		4:   "LOSS_LIMIT",
		8:   "MAX_ORDER_QUANTITY",
		16:  "MIN_ACCOUNT_BALANCE",
		32:  "MIN_MARGIN_BALANCE",
		64:  "ALGORITHM",
		128: "STATUS",
		256: "CURRENCY",
		512: "DEFAULT_COMMISSION",
	}
	ResponseAccountRmsInfo_PresenceBits_value = map[string]int32{
		"BUY_LIMIT":           1,
		"SELL_LIMIT":          2,
		"LOSS_LIMIT":          4,
		"MAX_ORDER_QUANTITY":  8,
		"MIN_ACCOUNT_BALANCE": 16,
		"MIN_MARGIN_BALANCE":  32,
		"ALGORITHM":           64,
		"STATUS":              128,
		"CURRENCY":            256,
		"DEFAULT_COMMISSION":  512,
	}
)

func (x ResponseAccountRmsInfo_PresenceBits) Enum() *ResponseAccountRmsInfo_PresenceBits {
	p := new(ResponseAccountRmsInfo_PresenceBits)
	*p = x
	return p
}

func (x ResponseAccountRmsInfo_PresenceBits) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ResponseAccountRmsInfo_PresenceBits) Descriptor() protoreflect.EnumDescriptor {
	return file_response_account_rms_info_proto_enumTypes[0].Descriptor()
}

func (ResponseAccountRmsInfo_PresenceBits) Type() protoreflect.EnumType {
	return &file_response_account_rms_info_proto_enumTypes[0]
}

func (x ResponseAccountRmsInfo_PresenceBits) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *ResponseAccountRmsInfo_PresenceBits) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = ResponseAccountRmsInfo_PresenceBits(num)
	return nil
}

// Deprecated: Use ResponseAccountRmsInfo_PresenceBits.Descriptor instead.
func (ResponseAccountRmsInfo_PresenceBits) EnumDescriptor() ([]byte, []int) {
	return file_response_account_rms_info_proto_rawDescGZIP(), []int{0, 0}
}

type ResponseAccountRmsInfo_AutoLiquidateFlag int32

const (
	ResponseAccountRmsInfo_ENABLED  ResponseAccountRmsInfo_AutoLiquidateFlag = 1
	ResponseAccountRmsInfo_DISABLED ResponseAccountRmsInfo_AutoLiquidateFlag = 2
)

// Enum value maps for ResponseAccountRmsInfo_AutoLiquidateFlag.
var (
	ResponseAccountRmsInfo_AutoLiquidateFlag_name = map[int32]string{
		1: "ENABLED",
		2: "DISABLED",
	}
	ResponseAccountRmsInfo_AutoLiquidateFlag_value = map[string]int32{
		"ENABLED":  1,
		"DISABLED": 2,
	}
)

func (x ResponseAccountRmsInfo_AutoLiquidateFlag) Enum() *ResponseAccountRmsInfo_AutoLiquidateFlag {
	p := new(ResponseAccountRmsInfo_AutoLiquidateFlag)
	*p = x
	return p
}

func (x ResponseAccountRmsInfo_AutoLiquidateFlag) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ResponseAccountRmsInfo_AutoLiquidateFlag) Descriptor() protoreflect.EnumDescriptor {
	return file_response_account_rms_info_proto_enumTypes[1].Descriptor()
}

func (ResponseAccountRmsInfo_AutoLiquidateFlag) Type() protoreflect.EnumType {
	return &file_response_account_rms_info_proto_enumTypes[1]
}

func (x ResponseAccountRmsInfo_AutoLiquidateFlag) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *ResponseAccountRmsInfo_AutoLiquidateFlag) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = ResponseAccountRmsInfo_AutoLiquidateFlag(num)
	return nil
}

// Deprecated: Use ResponseAccountRmsInfo_AutoLiquidateFlag.Descriptor instead.
func (ResponseAccountRmsInfo_AutoLiquidateFlag) EnumDescriptor() ([]byte, []int) {
	return file_response_account_rms_info_proto_rawDescGZIP(), []int{0, 1}
}

type ResponseAccountRmsInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TemplateId                        *int32                                    `protobuf:"varint,154467,req,name=template_id,json=templateId" json:"template_id,omitempty"`                                                                                           // PB_OFFSET + MNM_TEMPLATE_ID
	UserMsg                           []string                                  `protobuf:"bytes,132760,rep,name=user_msg,json=userMsg" json:"user_msg,omitempty"`                                                                                                     // PB_OFFSET + MNM_USER_MSG
	RqHandlerRpCode                   []string                                  `protobuf:"bytes,132764,rep,name=rq_handler_rp_code,json=rqHandlerRpCode" json:"rq_handler_rp_code,omitempty"`                                                                         // PB_OFFSET + MNM_REQUEST_HANDLER_RESPONSE_CODE
	RpCode                            []string                                  `protobuf:"bytes,132766,rep,name=rp_code,json=rpCode" json:"rp_code,omitempty"`                                                                                                        // PB_OFFSET + MNM_RESPONSE_CODE
	PresenceBits                      *uint32                                   `protobuf:"varint,153622,opt,name=presence_bits,json=presenceBits" json:"presence_bits,omitempty"`                                                                                     // PB_OFFSET + MNM_FIELD_PRESENCE_BITS
	FcmId                             *string                                   `protobuf:"bytes,154013,opt,name=fcm_id,json=fcmId" json:"fcm_id,omitempty"`                                                                                                           // PB_OFFSET + MNM_FCM_ID
	IbId                              *string                                   `protobuf:"bytes,154014,opt,name=ib_id,json=ibId" json:"ib_id,omitempty"`                                                                                                              // PB_OFFSET + MNM_IB_ID
	AccountId                         *string                                   `protobuf:"bytes,154008,opt,name=account_id,json=accountId" json:"account_id,omitempty"`                                                                                               // PB_OFFSET + MNM_ACCOUNT_ID
	Currency                          *string                                   `protobuf:"bytes,154383,opt,name=currency" json:"currency,omitempty"`                                                                                                                  // PB_OFFSET + MNM_ACCOUNT_CURRENCY
	Status                            *string                                   `protobuf:"bytes,154003,opt,name=status" json:"status,omitempty"`                                                                                                                      // PB_OFFSET + MNM_ACCOUNT_STATUS
	Algorithm                         *string                                   `protobuf:"bytes,150142,opt,name=algorithm" json:"algorithm,omitempty"`                                                                                                                // PB_OFFSET + MNM_ALGORITHM
	AutoLiquidateCriteria             *string                                   `protobuf:"bytes,131036,opt,name=auto_liquidate_criteria,json=autoLiquidateCriteria" json:"auto_liquidate_criteria,omitempty"`                                                         // PB_OFFSET + MNM_ACCOUNT_AUTO_LIQUIDATE_CRITERIA
	AutoLiquidate                     *ResponseAccountRmsInfo_AutoLiquidateFlag `protobuf:"varint,131035,opt,name=auto_liquidate,json=autoLiquidate,enum=rti.ResponseAccountRmsInfo_AutoLiquidateFlag" json:"auto_liquidate,omitempty"`                                // PB_OFFSET + MNM_ACCOUNT_AUTO_LIQUIDATE
	DisableOnAutoLiquidate            *ResponseAccountRmsInfo_AutoLiquidateFlag `protobuf:"varint,131038,opt,name=disable_on_auto_liquidate,json=disableOnAutoLiquidate,enum=rti.ResponseAccountRmsInfo_AutoLiquidateFlag" json:"disable_on_auto_liquidate,omitempty"` // PB_OFFSET + MNM_DISABLE_ON_AUTO_LIQUIDATE_FLAG
	AutoLiquidateThreshold            *float64                                  `protobuf:"fixed64,131037,opt,name=auto_liquidate_threshold,json=autoLiquidateThreshold" json:"auto_liquidate_threshold,omitempty"`                                                    // PB_OFFSET + MNM_ACCOUNT_AUTO_LIQUIDATE_THRESHOLD
	AutoLiquidateMaxMinAccountBalance *float64                                  `protobuf:"fixed64,131039,opt,name=auto_liquidate_max_min_account_balance,json=autoLiquidateMaxMinAccountBalance" json:"auto_liquidate_max_min_account_balance,omitempty"`             // PB_OFFSET + MNM_AUTO_LIQ_MAX_MIN_ACCOUNT_BALANCE
	LossLimit                         *float64                                  `protobuf:"fixed64,154019,opt,name=loss_limit,json=lossLimit" json:"loss_limit,omitempty"`                                                                                             // PB_OFFSET + MNM_LOSS_LIMIT
	MinAccountBalance                 *float64                                  `protobuf:"fixed64,156968,opt,name=min_account_balance,json=minAccountBalance" json:"min_account_balance,omitempty"`                                                                   // PB_OFFSET + MNM_MINIMUM_ACCOUNT_BALANCE
	MinMarginBalance                  *float64                                  `protobuf:"fixed64,156976,opt,name=min_margin_balance,json=minMarginBalance" json:"min_margin_balance,omitempty"`                                                                      // PB_OFFSET + MNM_MIN_MARGIN_BALANCE
	DefaultCommission                 *float64                                  `protobuf:"fixed64,153368,opt,name=default_commission,json=defaultCommission" json:"default_commission,omitempty"`                                                                     // PB_OFFSET + MNM_DEFAULT_COMMISSION
	BuyLimit                          *int32                                    `protobuf:"varint,154009,opt,name=buy_limit,json=buyLimit" json:"buy_limit,omitempty"`                                                                                                 // PB_OFFSET + MNM_BUY_LIMIT
	MaxOrderQuantity                  *int32                                    `protobuf:"varint,110105,opt,name=max_order_quantity,json=maxOrderQuantity" json:"max_order_quantity,omitempty"`                                                                       // PB_OFFSET + MNM_MAX_LIMIT_QUAN
	SellLimit                         *int32                                    `protobuf:"varint,154035,opt,name=sell_limit,json=sellLimit" json:"sell_limit,omitempty"`                                                                                              // PB_OFFSET + MNM_SELL_LIMIT
	CheckMinAccountBalance            *bool                                     `protobuf:"varint,156972,opt,name=check_min_account_balance,json=checkMinAccountBalance" json:"check_min_account_balance,omitempty"`                                                   // PB_OFFSET + MNM_CHECK_MIN_ACCT_BALANCE
}

func (x *ResponseAccountRmsInfo) Reset() {
	*x = ResponseAccountRmsInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_response_account_rms_info_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseAccountRmsInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseAccountRmsInfo) ProtoMessage() {}

func (x *ResponseAccountRmsInfo) ProtoReflect() protoreflect.Message {
	mi := &file_response_account_rms_info_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseAccountRmsInfo.ProtoReflect.Descriptor instead.
func (*ResponseAccountRmsInfo) Descriptor() ([]byte, []int) {
	return file_response_account_rms_info_proto_rawDescGZIP(), []int{0}
}

func (x *ResponseAccountRmsInfo) GetTemplateId() int32 {
	if x != nil && x.TemplateId != nil {
		return *x.TemplateId
	}
	return 0
}

func (x *ResponseAccountRmsInfo) GetUserMsg() []string {
	if x != nil {
		return x.UserMsg
	}
	return nil
}

func (x *ResponseAccountRmsInfo) GetRqHandlerRpCode() []string {
	if x != nil {
		return x.RqHandlerRpCode
	}
	return nil
}

func (x *ResponseAccountRmsInfo) GetRpCode() []string {
	if x != nil {
		return x.RpCode
	}
	return nil
}

func (x *ResponseAccountRmsInfo) GetPresenceBits() uint32 {
	if x != nil && x.PresenceBits != nil {
		return *x.PresenceBits
	}
	return 0
}

func (x *ResponseAccountRmsInfo) GetFcmId() string {
	if x != nil && x.FcmId != nil {
		return *x.FcmId
	}
	return ""
}

func (x *ResponseAccountRmsInfo) GetIbId() string {
	if x != nil && x.IbId != nil {
		return *x.IbId
	}
	return ""
}

func (x *ResponseAccountRmsInfo) GetAccountId() string {
	if x != nil && x.AccountId != nil {
		return *x.AccountId
	}
	return ""
}

func (x *ResponseAccountRmsInfo) GetCurrency() string {
	if x != nil && x.Currency != nil {
		return *x.Currency
	}
	return ""
}

func (x *ResponseAccountRmsInfo) GetStatus() string {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return ""
}

func (x *ResponseAccountRmsInfo) GetAlgorithm() string {
	if x != nil && x.Algorithm != nil {
		return *x.Algorithm
	}
	return ""
}

func (x *ResponseAccountRmsInfo) GetAutoLiquidateCriteria() string {
	if x != nil && x.AutoLiquidateCriteria != nil {
		return *x.AutoLiquidateCriteria
	}
	return ""
}

func (x *ResponseAccountRmsInfo) GetAutoLiquidate() ResponseAccountRmsInfo_AutoLiquidateFlag {
	if x != nil && x.AutoLiquidate != nil {
		return *x.AutoLiquidate
	}
	return ResponseAccountRmsInfo_ENABLED
}

func (x *ResponseAccountRmsInfo) GetDisableOnAutoLiquidate() ResponseAccountRmsInfo_AutoLiquidateFlag {
	if x != nil && x.DisableOnAutoLiquidate != nil {
		return *x.DisableOnAutoLiquidate
	}
	return ResponseAccountRmsInfo_ENABLED
}

func (x *ResponseAccountRmsInfo) GetAutoLiquidateThreshold() float64 {
	if x != nil && x.AutoLiquidateThreshold != nil {
		return *x.AutoLiquidateThreshold
	}
	return 0
}

func (x *ResponseAccountRmsInfo) GetAutoLiquidateMaxMinAccountBalance() float64 {
	if x != nil && x.AutoLiquidateMaxMinAccountBalance != nil {
		return *x.AutoLiquidateMaxMinAccountBalance
	}
	return 0
}

func (x *ResponseAccountRmsInfo) GetLossLimit() float64 {
	if x != nil && x.LossLimit != nil {
		return *x.LossLimit
	}
	return 0
}

func (x *ResponseAccountRmsInfo) GetMinAccountBalance() float64 {
	if x != nil && x.MinAccountBalance != nil {
		return *x.MinAccountBalance
	}
	return 0
}

func (x *ResponseAccountRmsInfo) GetMinMarginBalance() float64 {
	if x != nil && x.MinMarginBalance != nil {
		return *x.MinMarginBalance
	}
	return 0
}

func (x *ResponseAccountRmsInfo) GetDefaultCommission() float64 {
	if x != nil && x.DefaultCommission != nil {
		return *x.DefaultCommission
	}
	return 0
}

func (x *ResponseAccountRmsInfo) GetBuyLimit() int32 {
	if x != nil && x.BuyLimit != nil {
		return *x.BuyLimit
	}
	return 0
}

func (x *ResponseAccountRmsInfo) GetMaxOrderQuantity() int32 {
	if x != nil && x.MaxOrderQuantity != nil {
		return *x.MaxOrderQuantity
	}
	return 0
}

func (x *ResponseAccountRmsInfo) GetSellLimit() int32 {
	if x != nil && x.SellLimit != nil {
		return *x.SellLimit
	}
	return 0
}

func (x *ResponseAccountRmsInfo) GetCheckMinAccountBalance() bool {
	if x != nil && x.CheckMinAccountBalance != nil {
		return *x.CheckMinAccountBalance
	}
	return false
}

var File_response_account_rms_info_proto protoreflect.FileDescriptor

var file_response_account_rms_info_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x5f, 0x72, 0x6d, 0x73, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x03, 0x72, 0x74, 0x69, 0x22, 0xdf, 0x0a, 0x0a, 0x16, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x6d, 0x73, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x21, 0x0a, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0xe3, 0xb6, 0x09, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6d, 0x73, 0x67,
	0x18, 0x98, 0x8d, 0x08, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x75, 0x73, 0x65, 0x72, 0x4d, 0x73,
	0x67, 0x12, 0x2d, 0x0a, 0x12, 0x72, 0x71, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x5f,
	0x72, 0x70, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x9c, 0x8d, 0x08, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x0f, 0x72, 0x71, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x52, 0x70, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x19, 0x0a, 0x07, 0x72, 0x70, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x9e, 0x8d, 0x08, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x06, 0x72, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x25, 0x0a, 0x0d, 0x70,
	0x72, 0x65, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x62, 0x69, 0x74, 0x73, 0x18, 0x96, 0xb0, 0x09,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x42, 0x69,
	0x74, 0x73, 0x12, 0x17, 0x0a, 0x06, 0x66, 0x63, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x9d, 0xb3, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x66, 0x63, 0x6d, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x05, 0x69,
	0x62, 0x5f, 0x69, 0x64, 0x18, 0x9e, 0xb3, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x62,
	0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x98, 0xb3, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18,
	0x8f, 0xb6, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63,
	0x79, 0x12, 0x18, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x93, 0xb3, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x0a, 0x09, 0x61,
	0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x18, 0xfe, 0x94, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x61, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x12, 0x38, 0x0a, 0x17, 0x61,
	0x75, 0x74, 0x6f, 0x5f, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x72,
	0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x18, 0xdc, 0xff, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15,
	0x61, 0x75, 0x74, 0x6f, 0x4c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x61, 0x74, 0x65, 0x43, 0x72, 0x69,
	0x74, 0x65, 0x72, 0x69, 0x61, 0x12, 0x56, 0x0a, 0x0e, 0x61, 0x75, 0x74, 0x6f, 0x5f, 0x6c, 0x69,
	0x71, 0x75, 0x69, 0x64, 0x61, 0x74, 0x65, 0x18, 0xdb, 0xff, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x2d, 0x2e, 0x72, 0x74, 0x69, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x6d, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x41, 0x75, 0x74,
	0x6f, 0x4c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x61, 0x74, 0x65, 0x46, 0x6c, 0x61, 0x67, 0x52, 0x0d,
	0x61, 0x75, 0x74, 0x6f, 0x4c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x61, 0x74, 0x65, 0x12, 0x6a, 0x0a,
	0x19, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x6f, 0x6e, 0x5f, 0x61, 0x75, 0x74, 0x6f,
	0x5f, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x61, 0x74, 0x65, 0x18, 0xde, 0xff, 0x07, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x2d, 0x2e, 0x72, 0x74, 0x69, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x6d, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x2e,
	0x41, 0x75, 0x74, 0x6f, 0x4c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x61, 0x74, 0x65, 0x46, 0x6c, 0x61,
	0x67, 0x52, 0x16, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4f, 0x6e, 0x41, 0x75, 0x74, 0x6f,
	0x4c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x61, 0x74, 0x65, 0x12, 0x3a, 0x0a, 0x18, 0x61, 0x75, 0x74,
	0x6f, 0x5f, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x68, 0x72, 0x65,
	0x73, 0x68, 0x6f, 0x6c, 0x64, 0x18, 0xdd, 0xff, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x16, 0x61,
	0x75, 0x74, 0x6f, 0x4c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x61, 0x74, 0x65, 0x54, 0x68, 0x72, 0x65,
	0x73, 0x68, 0x6f, 0x6c, 0x64, 0x12, 0x53, 0x0a, 0x26, 0x61, 0x75, 0x74, 0x6f, 0x5f, 0x6c, 0x69,
	0x71, 0x75, 0x69, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x6d, 0x61, 0x78, 0x5f, 0x6d, 0x69, 0x6e, 0x5f,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18,
	0xdf, 0xff, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x21, 0x61, 0x75, 0x74, 0x6f, 0x4c, 0x69, 0x71,
	0x75, 0x69, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x78, 0x4d, 0x69, 0x6e, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x1f, 0x0a, 0x0a, 0x6c, 0x6f,
	0x73, 0x73, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0xa3, 0xb3, 0x09, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x09, 0x6c, 0x6f, 0x73, 0x73, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x30, 0x0a, 0x13, 0x6d,
	0x69, 0x6e, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x62, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x18, 0xa8, 0xca, 0x09, 0x20, 0x01, 0x28, 0x01, 0x52, 0x11, 0x6d, 0x69, 0x6e, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x2e, 0x0a,
	0x12, 0x6d, 0x69, 0x6e, 0x5f, 0x6d, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x5f, 0x62, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x18, 0xb0, 0xca, 0x09, 0x20, 0x01, 0x28, 0x01, 0x52, 0x10, 0x6d, 0x69, 0x6e,
	0x4d, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x2f, 0x0a,
	0x12, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x98, 0xae, 0x09, 0x20, 0x01, 0x28, 0x01, 0x52, 0x11, 0x64, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1d,
	0x0a, 0x09, 0x62, 0x75, 0x79, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x99, 0xb3, 0x09, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x62, 0x75, 0x79, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x2e, 0x0a,
	0x12, 0x6d, 0x61, 0x78, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x71, 0x75, 0x61, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x18, 0x99, 0xdc, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x6d, 0x61, 0x78,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x1f, 0x0a,
	0x0a, 0x73, 0x65, 0x6c, 0x6c, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0xb3, 0xb3, 0x09, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x73, 0x65, 0x6c, 0x6c, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x3b,
	0x0a, 0x19, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x5f, 0x6d, 0x69, 0x6e, 0x5f, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x5f, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0xac, 0xca, 0x09, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x16, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x4d, 0x69, 0x6e, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x22, 0xca, 0x01, 0x0a, 0x0c,
	0x50, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x42, 0x69, 0x74, 0x73, 0x12, 0x0d, 0x0a, 0x09,
	0x42, 0x55, 0x59, 0x5f, 0x4c, 0x49, 0x4d, 0x49, 0x54, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x53,
	0x45, 0x4c, 0x4c, 0x5f, 0x4c, 0x49, 0x4d, 0x49, 0x54, 0x10, 0x02, 0x12, 0x0e, 0x0a, 0x0a, 0x4c,
	0x4f, 0x53, 0x53, 0x5f, 0x4c, 0x49, 0x4d, 0x49, 0x54, 0x10, 0x04, 0x12, 0x16, 0x0a, 0x12, 0x4d,
	0x41, 0x58, 0x5f, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x51, 0x55, 0x41, 0x4e, 0x54, 0x49, 0x54,
	0x59, 0x10, 0x08, 0x12, 0x17, 0x0a, 0x13, 0x4d, 0x49, 0x4e, 0x5f, 0x41, 0x43, 0x43, 0x4f, 0x55,
	0x4e, 0x54, 0x5f, 0x42, 0x41, 0x4c, 0x41, 0x4e, 0x43, 0x45, 0x10, 0x10, 0x12, 0x16, 0x0a, 0x12,
	0x4d, 0x49, 0x4e, 0x5f, 0x4d, 0x41, 0x52, 0x47, 0x49, 0x4e, 0x5f, 0x42, 0x41, 0x4c, 0x41, 0x4e,
	0x43, 0x45, 0x10, 0x20, 0x12, 0x0d, 0x0a, 0x09, 0x41, 0x4c, 0x47, 0x4f, 0x52, 0x49, 0x54, 0x48,
	0x4d, 0x10, 0x40, 0x12, 0x0b, 0x0a, 0x06, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x10, 0x80, 0x01,
	0x12, 0x0d, 0x0a, 0x08, 0x43, 0x55, 0x52, 0x52, 0x45, 0x4e, 0x43, 0x59, 0x10, 0x80, 0x02, 0x12,
	0x17, 0x0a, 0x12, 0x44, 0x45, 0x46, 0x41, 0x55, 0x4c, 0x54, 0x5f, 0x43, 0x4f, 0x4d, 0x4d, 0x49,
	0x53, 0x53, 0x49, 0x4f, 0x4e, 0x10, 0x80, 0x04, 0x22, 0x2e, 0x0a, 0x11, 0x41, 0x75, 0x74, 0x6f,
	0x4c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x61, 0x74, 0x65, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x0b, 0x0a,
	0x07, 0x45, 0x4e, 0x41, 0x42, 0x4c, 0x45, 0x44, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x44, 0x49,
	0x53, 0x41, 0x42, 0x4c, 0x45, 0x44, 0x10, 0x02,
}

var (
	file_response_account_rms_info_proto_rawDescOnce sync.Once
	file_response_account_rms_info_proto_rawDescData = file_response_account_rms_info_proto_rawDesc
)

func file_response_account_rms_info_proto_rawDescGZIP() []byte {
	file_response_account_rms_info_proto_rawDescOnce.Do(func() {
		file_response_account_rms_info_proto_rawDescData = protoimpl.X.CompressGZIP(file_response_account_rms_info_proto_rawDescData)
	})
	return file_response_account_rms_info_proto_rawDescData
}

var file_response_account_rms_info_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_response_account_rms_info_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_response_account_rms_info_proto_goTypes = []interface{}{
	(ResponseAccountRmsInfo_PresenceBits)(0),      // 0: rti.ResponseAccountRmsInfo.PresenceBits
	(ResponseAccountRmsInfo_AutoLiquidateFlag)(0), // 1: rti.ResponseAccountRmsInfo.AutoLiquidateFlag
	(*ResponseAccountRmsInfo)(nil),                // 2: rti.ResponseAccountRmsInfo
}
var file_response_account_rms_info_proto_depIdxs = []int32{
	1, // 0: rti.ResponseAccountRmsInfo.auto_liquidate:type_name -> rti.ResponseAccountRmsInfo.AutoLiquidateFlag
	1, // 1: rti.ResponseAccountRmsInfo.disable_on_auto_liquidate:type_name -> rti.ResponseAccountRmsInfo.AutoLiquidateFlag
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_response_account_rms_info_proto_init() }
func file_response_account_rms_info_proto_init() {
	if File_response_account_rms_info_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_response_account_rms_info_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseAccountRmsInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_response_account_rms_info_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_response_account_rms_info_proto_goTypes,
		DependencyIndexes: file_response_account_rms_info_proto_depIdxs,
		EnumInfos:         file_response_account_rms_info_proto_enumTypes,
		MessageInfos:      file_response_account_rms_info_proto_msgTypes,
	}.Build()
	File_response_account_rms_info_proto = out.File
	file_response_account_rms_info_proto_rawDesc = nil
	file_response_account_rms_info_proto_goTypes = nil
	file_response_account_rms_info_proto_depIdxs = nil
}
