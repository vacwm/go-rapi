// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.11.4
// source: bracket_updates.proto

package rti

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type BracketUpdates struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TemplateId             *int32  `protobuf:"varint,154467,req,name=template_id,json=templateId" json:"template_id,omitempty"`                                       // PB_OFFSET + MNM_TEMPLATE_ID
	FcmId                  *string `protobuf:"bytes,154013,opt,name=fcm_id,json=fcmId" json:"fcm_id,omitempty"`                                                       // PB_OFFSET + MNM_FCM_ID
	IbId                   *string `protobuf:"bytes,154014,opt,name=ib_id,json=ibId" json:"ib_id,omitempty"`                                                          // PB_OFFSET + MNM_IB_ID
	AccountId              *string `protobuf:"bytes,154008,opt,name=account_id,json=accountId" json:"account_id,omitempty"`                                           // PB_OFFSET + MNM_ACCOUNT_ID
	BasketId               *string `protobuf:"bytes,110300,opt,name=basket_id,json=basketId" json:"basket_id,omitempty"`                                              // PB_OFFSET + MNM_BASKET_ID
	StopTicks              *int32  `protobuf:"varint,154458,opt,name=stop_ticks,json=stopTicks" json:"stop_ticks,omitempty"`                                          // PB_OFFSET + MNM_STOP_TICKS
	StopQuantity           *int32  `protobuf:"varint,154459,opt,name=stop_quantity,json=stopQuantity" json:"stop_quantity,omitempty"`                                 // PB_OFFSET + MNM_STOP_QUANTITY
	StopQuantityReleased   *int32  `protobuf:"varint,154466,opt,name=stop_quantity_released,json=stopQuantityReleased" json:"stop_quantity_released,omitempty"`       // PB_OFFSET + MNM_STOP_QUANTITY_RELEASED
	TargetTicks            *int32  `protobuf:"varint,154456,opt,name=target_ticks,json=targetTicks" json:"target_ticks,omitempty"`                                    // PB_OFFSET + MNM_TARGET_TICKS
	TargetQuantity         *int32  `protobuf:"varint,154457,opt,name=target_quantity,json=targetQuantity" json:"target_quantity,omitempty"`                           // PB_OFFSET + MNM_TARGET_QUANTITY
	TargetQuantityReleased *int32  `protobuf:"varint,154460,opt,name=target_quantity_released,json=targetQuantityReleased" json:"target_quantity_released,omitempty"` // PB_OFFSET + MNM_TARGET_QUANTITY_RELEASED
}

func (x *BracketUpdates) Reset() {
	*x = BracketUpdates{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bracket_updates_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BracketUpdates) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BracketUpdates) ProtoMessage() {}

func (x *BracketUpdates) ProtoReflect() protoreflect.Message {
	mi := &file_bracket_updates_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BracketUpdates.ProtoReflect.Descriptor instead.
func (*BracketUpdates) Descriptor() ([]byte, []int) {
	return file_bracket_updates_proto_rawDescGZIP(), []int{0}
}

func (x *BracketUpdates) GetTemplateId() int32 {
	if x != nil && x.TemplateId != nil {
		return *x.TemplateId
	}
	return 0
}

func (x *BracketUpdates) GetFcmId() string {
	if x != nil && x.FcmId != nil {
		return *x.FcmId
	}
	return ""
}

func (x *BracketUpdates) GetIbId() string {
	if x != nil && x.IbId != nil {
		return *x.IbId
	}
	return ""
}

func (x *BracketUpdates) GetAccountId() string {
	if x != nil && x.AccountId != nil {
		return *x.AccountId
	}
	return ""
}

func (x *BracketUpdates) GetBasketId() string {
	if x != nil && x.BasketId != nil {
		return *x.BasketId
	}
	return ""
}

func (x *BracketUpdates) GetStopTicks() int32 {
	if x != nil && x.StopTicks != nil {
		return *x.StopTicks
	}
	return 0
}

func (x *BracketUpdates) GetStopQuantity() int32 {
	if x != nil && x.StopQuantity != nil {
		return *x.StopQuantity
	}
	return 0
}

func (x *BracketUpdates) GetStopQuantityReleased() int32 {
	if x != nil && x.StopQuantityReleased != nil {
		return *x.StopQuantityReleased
	}
	return 0
}

func (x *BracketUpdates) GetTargetTicks() int32 {
	if x != nil && x.TargetTicks != nil {
		return *x.TargetTicks
	}
	return 0
}

func (x *BracketUpdates) GetTargetQuantity() int32 {
	if x != nil && x.TargetQuantity != nil {
		return *x.TargetQuantity
	}
	return 0
}

func (x *BracketUpdates) GetTargetQuantityReleased() int32 {
	if x != nil && x.TargetQuantityReleased != nil {
		return *x.TargetQuantityReleased
	}
	return 0
}

var File_bracket_updates_proto protoreflect.FileDescriptor

var file_bracket_updates_proto_rawDesc = []byte{
	0x0a, 0x15, 0x62, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x72, 0x74, 0x69, 0x22, 0xaf, 0x03, 0x0a,
	0x0e, 0x42, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x12,
	0x21, 0x0a, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0xe3,
	0xb6, 0x09, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x49, 0x64, 0x12, 0x17, 0x0a, 0x06, 0x66, 0x63, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x9d, 0xb3, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x66, 0x63, 0x6d, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x05, 0x69,
	0x62, 0x5f, 0x69, 0x64, 0x18, 0x9e, 0xb3, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x62,
	0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x98, 0xb3, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x09, 0x62, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0xdc, 0xdd, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x61, 0x73, 0x6b, 0x65, 0x74,
	0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0a, 0x73, 0x74, 0x6f, 0x70, 0x5f, 0x74, 0x69, 0x63, 0x6b, 0x73,
	0x18, 0xda, 0xb6, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x73, 0x74, 0x6f, 0x70, 0x54, 0x69,
	0x63, 0x6b, 0x73, 0x12, 0x25, 0x0a, 0x0d, 0x73, 0x74, 0x6f, 0x70, 0x5f, 0x71, 0x75, 0x61, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x18, 0xdb, 0xb6, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x73, 0x74,
	0x6f, 0x70, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x36, 0x0a, 0x16, 0x73, 0x74,
	0x6f, 0x70, 0x5f, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x72, 0x65, 0x6c, 0x65,
	0x61, 0x73, 0x65, 0x64, 0x18, 0xe2, 0xb6, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x14, 0x73, 0x74,
	0x6f, 0x70, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73,
	0x65, 0x64, 0x12, 0x23, 0x0a, 0x0c, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x74, 0x69, 0x63,
	0x6b, 0x73, 0x18, 0xd8, 0xb6, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x74, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x54, 0x69, 0x63, 0x6b, 0x73, 0x12, 0x29, 0x0a, 0x0f, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x5f, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0xd9, 0xb6, 0x09, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0e, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x12, 0x3a, 0x0a, 0x18, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x71, 0x75, 0x61,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x64, 0x18, 0xdc,
	0xb6, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x16, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x51, 0x75,
	0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x64,
}

var (
	file_bracket_updates_proto_rawDescOnce sync.Once
	file_bracket_updates_proto_rawDescData = file_bracket_updates_proto_rawDesc
)

func file_bracket_updates_proto_rawDescGZIP() []byte {
	file_bracket_updates_proto_rawDescOnce.Do(func() {
		file_bracket_updates_proto_rawDescData = protoimpl.X.CompressGZIP(file_bracket_updates_proto_rawDescData)
	})
	return file_bracket_updates_proto_rawDescData
}

var file_bracket_updates_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_bracket_updates_proto_goTypes = []interface{}{
	(*BracketUpdates)(nil), // 0: rti.BracketUpdates
}
var file_bracket_updates_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_bracket_updates_proto_init() }
func file_bracket_updates_proto_init() {
	if File_bracket_updates_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_bracket_updates_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BracketUpdates); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_bracket_updates_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_bracket_updates_proto_goTypes,
		DependencyIndexes: file_bracket_updates_proto_depIdxs,
		MessageInfos:      file_bracket_updates_proto_msgTypes,
	}.Build()
	File_bracket_updates_proto = out.File
	file_bracket_updates_proto_rawDesc = nil
	file_bracket_updates_proto_goTypes = nil
	file_bracket_updates_proto_depIdxs = nil
}
